<ResourceDictionary
    x:Class="MyHealth.StepListView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:MyHealth">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Views/StepDataView.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="StepData.ListBoxItemContainer" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="{DynamicResource StepData.TextColor}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StepData.Hover}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource StepData.SelectionColor}" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type local:StepListViewModel}">
        <ListBox
            ItemContainerStyle="{StaticResource StepData.ListBoxItemContainer}"
            ItemTemplate="{StaticResource StepData.HiddenSeperatorTemplate}"
            ItemsSource="{Binding StepsArray}"
            SelectedIndex="{Binding SelectedStepIndex, Mode=TwoWay}"
            SelectedItem="{Binding SelectedStep, Mode=TwoWay}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding IgnoreSeperatorsCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListBox>
    </DataTemplate>
</ResourceDictionary>