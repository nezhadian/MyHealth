<Window
    x:Class="MyHealth.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisEx="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:csm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dragdrop="urn:gong-wpf-dragdrop"
    xmlns:local="clr-namespace:MyHealth"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    x:Name="mainWin"
    Title="MainWindow"
    d:Height="768"
    d:Width="1366"
    AllowsTransparency="True"
    Background="Transparent"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    Topmost="True"
    WindowState="Maximized"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.CommandBindings>
        <CommandBinding
            CanExecute="NewCommand_CanExecute"
            Command="{x:Static ApplicationCommands.New}"
            Executed="NewCommand_Executed" />
        <CommandBinding
            CanExecute="DeleteCommand_CanExecute"
            Command="{x:Static ApplicationCommands.Delete}"
            Executed="DeleteCommand_Executed" />
    </Window.CommandBindings>

    <Window.Resources>
        <!--  Tasklist Collection Viewing and Grouping  -->
        <CollectionViewSource
            x:Key="TaskListCollectionView"
            IsLiveGroupingRequested="True"
            IsLiveSortingRequested="True"
            Source="{Binding TaskList}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Grouping">
                    <PropertyGroupDescription.SortDescriptions>
                        <csm:SortDescription PropertyName="Name" />
                    </PropertyGroupDescription.SortDescriptions>
                </PropertyGroupDescription>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <!--  Converters  -->
        <local:CaptionTextSwitchConverter x:Key="CaptionTextConverter" />
        <local:StepData2PageConverter x:Key="PageConverter" />

        <!--  Storyboards  -->
        <Storyboard x:Key="DelayedCollapseStoryboard">
            <!--  Expander Height Anim  -->
            <DoubleAnimation
                BeginTime="0:0:1.5"
                Storyboard.TargetName="grdExpanderScale"
                Storyboard.TargetProperty="ScaleY"
                To="0"
                Duration="0:00:0.2" />
            <!--  Expander Width Anim  -->
            <DoubleAnimation
                BeginTime="0:0:1.5"
                Storyboard.TargetName="grdExpanderScale"
                Storyboard.TargetProperty="ScaleX"
                To="0"
                Duration="0:00:0.2" />
            <!--  Expander Opacity Anim  -->
            <DoubleAnimation
                BeginTime="0:0:1.5"
                Storyboard.TargetName="grdExpander"
                Storyboard.TargetProperty="Opacity"
                To="0"
                Duration="0:0:0.2" />
            <!--  Timer Border Opacity  -->
            <DoubleAnimation
                BeginTime="0:0:1.5"
                Storyboard.TargetName="bdrMainMenu"
                Storyboard.TargetProperty="Background.Opacity"
                To="0.3"
                Duration="0:0:0.2" />
        </Storyboard>
        <Storyboard x:Key="ExpandStoryboard">
            <!--  Expander Height Anim  -->
            <DoubleAnimation
                Storyboard.TargetName="grdExpanderScale"
                Storyboard.TargetProperty="ScaleY"
                To="1"
                Duration="0:00:0.15" />
            <!--  Expander Width Anim  -->
            <DoubleAnimation
                Storyboard.TargetName="grdExpanderScale"
                Storyboard.TargetProperty="ScaleX"
                To="1"
                Duration="0:00:0.15" />
            <!--  Expander Opacity Anim  -->
            <DoubleAnimation
                Storyboard.TargetName="grdExpander"
                Storyboard.TargetProperty="Opacity"
                To="1"
                Duration="0:0:0.15" />
            <!--  Timer Border Opacity  -->
            <DoubleAnimation
                Storyboard.TargetName="bdrMainMenu"
                Storyboard.TargetProperty="Background.Opacity"
                To="1"
                Duration="0:0:0.15" />
        </Storyboard>
    </Window.Resources>
    <Grid>
        <!--  Pages Content  -->
        <Grid Background="Transparent" MouseDown="StepContent_MouseDown">
            <Frame Content="{Binding SelectedStep, Converter={StaticResource PageConverter}}" NavigationUIVisibility="Hidden" />
        </Grid>

        <!--  Container  -->
        <Border
            x:Name="bdrMainMenu"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            Style="{StaticResource Main.TimerBorder}">
            <Grid>
                <!--  Rows  -->
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <!--  Caption  -->
                <Grid
                    Grid.Row="1"
                    Margin="3,3,3,5"
                    HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal">
                        <!--  Timer  -->
                        <TextBlock
                            x:Name="txtTimer"
                            Margin="0,0,10,0"
                            FontWeight="DemiBold"
                            Style="{StaticResource Texts.CaptionText}"
                            Text="{Binding Timer.Remained, Converter={StaticResource TimeSpanConverter}}"
                            Visibility="{Binding SelectedStep.StepType, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter='WorkTime,ImageSlider,ShortBreak'}" />

                        <!--  Title  -->
                        <TextBlock Style="{StaticResource Texts.CaptionText}">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource CaptionTextConverter}" UpdateSourceTrigger="PropertyChanged">
                                    <Binding Path="SelectedStep.StepName" />
                                    <Binding Path="SelectedTask.Title" />
                                    <Binding Path="SelectedStep.StepType" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>

                </Grid>

                <!--  Expander  -->
                <Grid
                    x:Name="grdExpander"
                    MinWidth="700"
                    MinHeight="550"
                    MaxHeight="630">
                    <!--  rows  -->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="3*" MinWidth="250" />
                    </Grid.ColumnDefinitions>

                    <!--  Task ListBox  -->
                    <ListBox
                        x:Name="lstTasks"
                        dragdrop:DragDrop.IsDragSource="True"
                        dragdrop:DragDrop.IsDropTarget="True"
                        dragdrop:DragDrop.SelectDroppedItems="True"
                        ItemsSource="{Binding Source={StaticResource TaskListCollectionView}}"
                        LostFocus="lstTasks_LostFocus"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        SelectedItem="{Binding SelectedTask}"
                        SelectionChanged="lstTasks_SelectionChanged"
                        Style="{StaticResource TaskView.ListBox}">
                        <ListBox.GroupStyle>
                            <GroupStyle ContainerStyle="{StaticResource MainWindow.TaskList.GroupItem}" />
                        </ListBox.GroupStyle>
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <ContextMenu.CommandBindings>
                                    <CommandBinding
                                        CanExecute="DeleteCommand_CanExecute"
                                        Command="{x:Static ApplicationCommands.Delete}"
                                        Executed="DeleteCommand_Executed" />
                                </ContextMenu.CommandBindings>
                                <MenuItem Command="{x:Static ApplicationCommands.Delete}" Header="Delete" />
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>

                    <!--  Step List  -->
                    <Expander
                        Grid.Column="1"
                        Margin="10,5,0,0"
                        Header="Steps"
                        IsExpanded="True">
                        <ListBox
                            x:Name="lstSteps"
                            ItemContainerStyle="{StaticResource StepData.ListBoxItemContainer}"
                            ItemTemplate="{StaticResource MainWindow.StepListTemplate}"
                            ItemsSource="{Binding StepList}"
                            SelectedIndex="0"
                            SelectedItem="{Binding SelectedStep}"
                            SelectionChanged="lstSteps_SelectionChanged" />
                    </Expander>

                    <!--  Add Textbox  -->
                    <Grid Grid.Row="1" Grid.ColumnSpan="2">
                        <!--  Input TextBox  -->
                        <TextBox
                            x:Name="txtCommand"
                            Height="36"
                            Margin="30,0"
                            Padding="18,0"
                            adonisEx:CornerRadiusExtension.CornerRadius="18"
                            adonisEx:WatermarkExtension.IsWatermarkVisible="True"
                            adonisEx:WatermarkExtension.Watermark="Add New Task"
                            KeyDown="TextBox_KeyDown"
                            MaxLength="{StaticResource TaskView.MaxLength}" />
                    </Grid>

                    <!--  Menu  -->
                    <Grid Grid.Row="2" Grid.ColumnSpan="2">
                        <Menu HorizontalAlignment="Center" ItemContainerStyle="{StaticResource MainWindow.Menu.MenuItemStyle}">
                            <!--  Reset btn  -->
                            <MenuItem
                                Click="mnuReset_Click"
                                Header="Reset"
                                Icon="{StaticResource RestartIcon}"
                                Visibility="{Binding ElementName=txtTimer, Path=Visibility}" />

                            <!--  Play and Pause btn  -->
                            <MenuItem
                                IsChecked="{Binding Timer.IsPaused}"
                                Style="{StaticResource PlayPauseMenuItem.Style}"
                                Visibility="{Binding ElementName=txtTimer, Path=Visibility}" />

                            <!--  Settings btn  -->
                            <MenuItem
                                Click="mnuSettings_Click"
                                Header="Settings"
                                Icon="{StaticResource SettingIcon}" />


                        </Menu>

                        <!--  Always On Top btn  -->
                        <MenuItem
                            HorizontalAlignment="Left"
                            IsChecked="{Binding Topmost}"
                            Style="{StaticResource LockMenuItem.Style}" />

                        <!--  Exit btn  -->
                        <MenuItem
                            HorizontalAlignment="Right"
                            Click="mnuExit_Click"
                            Header="Exit"
                            Icon="{StaticResource CloseIcon}"
                            Style="{StaticResource MainWindow.Menu.MenuItemStyle}" />
                    </Grid>

                    <!--  Expander Scaler  -->
                    <Grid.LayoutTransform>
                        <ScaleTransform x:Name="grdExpanderScale" ScaleX="1" ScaleY="1" />
                    </Grid.LayoutTransform>
                </Grid>
            </Grid>


        </Border>

        <!--  TaskBar Icon  -->
        <tb:TaskbarIcon
            x:Name="tbNotify"
            IconSource="/Images/icon.ico"
            TrayLeftMouseDown="Open_Click">
            <!--  Left Click Menu  -->
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu Loaded="ContextMenu_Loaded">
                    <MenuItem Click="Open_Click" Header="Open" />
                    <MenuItem
                        x:Name="mnuLockOnScreen"
                        Header="Luck On Screen"
                        IsCheckable="True"
                        StaysOpenOnClick="True" />
                    <Separator />
                    <MenuItem Click="mnuSettings_Click" Header="Settings" />
                    <MenuItem Click="mnuExit_Click" Header="Exit" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>

        <!--  Duck Expand and Collapse Animation  -->
        <Grid.Triggers>
            <!--  Expand Duck When MouseEnter  -->
            <EventTrigger RoutedEvent="MouseEnter" SourceName="bdrMainMenu">
                <BeginStoryboard x:Name="ExpandBeginStroyboard" Storyboard="{StaticResource ExpandStoryboard}" />
            </EventTrigger>
            <!--  Keep Duck Open when dragging  -->
            <EventTrigger RoutedEvent="PreviewDragOver">
                <BeginStoryboard Storyboard="{StaticResource ExpandStoryboard}" />
            </EventTrigger>

            <!--  Collapse Duck When MouseLeaved  -->
            <EventTrigger RoutedEvent="MouseLeave" SourceName="bdrMainMenu">
                <BeginStoryboard Storyboard="{StaticResource DelayedCollapseStoryboard}" />
            </EventTrigger>
            <!--  Collapse After 1.5s When App Loaded  -->
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard Storyboard="{StaticResource DelayedCollapseStoryboard}" />
            </EventTrigger>
        </Grid.Triggers>

    </Grid>
</Window>
