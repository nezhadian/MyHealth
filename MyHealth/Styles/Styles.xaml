<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MyHealth">

    <!--Message Text-->
    <Style x:Key="Pages.MessageText" TargetType="TextBlock">
        <Setter Property="Text" Value="This is sample text" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#333" />
    </Style>

    <Style x:Key="Pages.MessageText.Dark" TargetType="TextBlock" BasedOn="{StaticResource Pages.MessageText}">
        <Setter Property="Foreground" Value="#fff" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    
    <!--Stop Sound Button-->
    <Style x:Key="FreshStart.StopSound" TargetType="Button">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Background" Value="#2FFFFFFF" />
        <Setter Property="Foreground" Value="#fff" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#3fFFFFFF" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#4fFFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Timer Border-->
    <Style x:Key="Main.TimerBorder" TargetType="Border">
        <Setter Property="Background" Value="#55ffffff" />
        <Setter Property="CornerRadius" Value="2,2,0,0" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="Height" Value="23" />
        <Setter Property="BorderBrush" Value="#B9B9B9" />
        <Setter Property="BorderThickness" Value="1,1,1,0" />

    </Style>

    <!-- ______________________ Menu Item Style ______________________ -->
    <SolidColorBrush x:Key="Menu.Bg" Color="#fff"/>
    <SolidColorBrush x:Key="Menu.Border" Color="#ddd"/>
    <SolidColorBrush x:Key="Menu.TextColor" Color="#333"/>
    <SolidColorBrush x:Key="Menu.Hover" Color="#FFF1F1F1"/>
    <SolidColorBrush x:Key="Menu.Pressed" Color="#FFC9C9C9"/>
    <SolidColorBrush x:Key="Menu.Icons" Color="#333"/>

    <Style x:Key="ContextMenu.BgBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Menu.Bg}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Menu.Border}" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Padding" Value="0,5" />
        
    </Style>
    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource Menu.Bg}" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Style="{StaticResource ContextMenu.BgBorder}">
                        <StackPanel ClipToBounds="True"
                          Orientation="Vertical"
                          IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="MenuItem">
        <Setter Property="MinWidth" Value="160" />
        <Setter Property="Background" Value="{DynamicResource Menu.Bg}" />
        <Setter Property="Foreground" Value="{DynamicResource Menu.TextColor}" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="24" />
                            </Grid.ColumnDefinitions>

                            <Popup AllowsTransparency="True" x:Name="Popup" Placement="Right" IsOpen="{TemplateBinding IsSubmenuOpen}">
                                <Border Style="{StaticResource ContextMenu.BgBorder}" Margin="3,0,0,0">
                                    <StackPanel ClipToBounds="True"
                                          Orientation="Vertical"
                                          IsItemsHost="True" />
                                </Border>
                            </Popup>

                            <ContentPresenter ContentSource="Icon" x:Name="icon"/>

                            <Path Data="F1 M 18.382812 4.117188 C 18.871094 4.605469 18.871094 5.394531 18.382812 5.882812 L 8.382812 15.882812 C 7.894531 16.371094 7.105469 16.371094 6.617188 15.882812 L 1.616094 10.882812 C 1.127968 10.394531 1.127968 9.605469 1.616094 9.117188 C 2.104297 8.628906 2.895703 8.628906 3.383984 9.117188 L 7.464843 13.230469 L 16.617186 4.117188 C 17.105467 3.628125 17.894531 3.628125 18.382812 4.117188 L 18.382812 4.117188 Z " 
                                  Fill="{DynamicResource Menu.TextColor}" 
                                  Stretch="Uniform" 
                                  Margin="8"
                                  Visibility="Collapsed"
                                  x:Name="checkMark"
                                  />

                            <ContentPresenter 
                                Grid.Column="1"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentSource="Header" />

                            <Path Data="F1 M 7.5 17.5 C 7.180156 17.5 6.860156 17.37793 6.616406 17.133789 C 6.128125 16.645508 6.128125 15.854492 6.616406 15.366211 L 11.984375 10 L 6.616406 4.632812 C 6.128125 4.144531 6.128125 3.353516 6.616406 2.865234 C 7.104688 2.376953 7.895703 2.376953 8.383985 2.865234 L 14.633985 9.115234 C 15.122266 9.603516 15.122266 10.394531 14.633985 10.882812 L 8.383985 17.132812 C 8.139843 17.378906 7.819921 17.5 7.5 17.5 Z "
                                  Fill="{TemplateBinding Foreground}" Stretch="Uniform" 
                                  Margin="8"
                                  x:Name="indicator"
                                  Grid.Column="2"/>


                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource Menu.Hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource Menu.Pressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="indicator"/>
                        </Trigger>
                        <Trigger Property="IsCheckable" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="icon"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCheckable" Value="true"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible" TargetName="checkMark"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Padding" Value="0,5,0,5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource Menu.Border}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Rectangle Height="1" Fill="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Icon Buttons-->
    <Style x:Key="Buttons.OnlyIcon" TargetType="Button">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#333" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#e7e7e7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Step Data Style-->

    <local:StepDataIconConverter x:Key="IconConverter" />
    <local:TimeSpanConverter x:Key="TimeSpanConverter" />

    <ControlTemplate x:Key="StepData.Template" TargetType="{x:Type local:StepData}">
        <Border Background="{TemplateBinding Background}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Border x:Name="selBar" Background="#09f" Visibility="Collapsed" CornerRadius="0,3,3,0"/>
                <Path x:Name="icon" Grid.Column="1" Margin="4" Fill="#999" Stretch="Uniform">
                    <Path.Data>
                        <MultiBinding Converter="{StaticResource IconConverter}">
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Mode="OneWay" Path="StepType"/>
                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Mode="OneWay" Path="ImageList"/>
                        </MultiBinding>
                    </Path.Data>
                </Path>
                
                <TextBlock Text="{TemplateBinding StepName}" Grid.Column="3" VerticalAlignment="Center" />
                <TextBlock Text="{TemplateBinding Duration,Converter={StaticResource TimeSpanConverter}}" x:Name="timeSpan" Visibility="Collapsed" Grid.Column="4" VerticalAlignment="Center" Margin="0,0,10,0"/>
                
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#330099ff" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Visibility" Value="Visible" TargetName="selBar" />
                <Setter Property="Foreground" Value="#09f" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Fill" Value="#09f" TargetName="icon" />
            </Trigger>
            <Trigger Property="StepType" Value="WorkTime">
                <Setter Property="Visibility" Value="Visible" TargetName="timeSpan"/>
            </Trigger>
            <Trigger Property="StepType" Value="ImageSlider">
                <Setter Property="Visibility" Value="Visible" TargetName="timeSpan"/>
            </Trigger>
            <Trigger Property="StepType" Value="ShortBreak">
                <Setter Property="Visibility" Value="Visible" TargetName="timeSpan"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="StepData.Seperator" TargetType="{x:Type local:StepData}">
        <Grid Background="{TemplateBinding Background}">
            <Rectangle Height="1" Fill="{TemplateBinding Foreground}" x:Name="bar"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Height" Value="5" TargetName="bar"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Height" Value="5" TargetName="bar"/>
                <Setter Property="Fill" Value="#09f" TargetName="bar"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:StepData}">
        <Setter Property="Height" Value="27" />
        <Setter Property="Template" Value="{StaticResource StepData.Template}"/>
        <Style.Triggers>
            <Trigger Property="StepType" Value="Seperator">
                <Setter Property="Height" Value="15" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#ccc" />
                <Setter Property="Template" Value="{StaticResource StepData.Seperator}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>